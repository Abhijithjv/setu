// prisma/schema.prisma

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Updated User model with all the new fields
model User {
  id            String    @id @default(cuid())
  fullName      String?
  email         String?   @unique
  emailVerified DateTime?
  username      String?   @unique
  phone         String?
  college       String?
  branch        String?
  year          String?
  password      String?
  image         String?
  accounts      Account[]
  sessions      Session[]
  roadmaps      Roadmap[] // Link to the new Roadmap model
}

// New Roadmap model to store assessment results and progress
model Roadmap {
  id             String   @id @default(cuid())
  userId         String
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  targetCareer   String
  completedTasks Json // Storing an array of completed task IDs
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // Removed @db.Text
  access_token      String? // Removed @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // Removed @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
}